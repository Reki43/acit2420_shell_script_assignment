#!/usr/bin/env bash

clone_dir="


usage() {
  echo "Usage: $0 [-h] [-x] [-p] [-s]"
  echo ""
  echo "    -h, --help          Display help"
  echo "    -x  --execute       Excute the main script to install both packages"
  echo "    -p, --packages      Execute package installer"
  echo "    -s, --symlink       Execute symlink creation script"
  exit 1
}

# Default values
execute_package_installer=0
execute_symlink=0


# Parse command-line options
while getopts ":hxps" opt;
do
  case $opt in
    h)
      usage
      ;;
    x)
      execute_package_installer=1 && execute_symlink=1
      ;;
    p)
      execute_package_installer=1
      ;;
    s)
      execute_symlink=1
      ;;
    ?)
      echo "Invalid option: -$OPTARG"
      usage
      ;;
  esac
done


# Check if no options were provided
if [[ $OPTIND -eq 1 ]];
then
  echo "NOTE: Make sure to use sudo when executing with -x or -p"
  usage
fi


# Runs both scripts if option -x is selected. It runs both scripts
if [ "$execute_package_installer" -eq 1 ] && [ "$execute_symlink" -eq 1 ];
then
  echo "Running both scripts..."
  ./package_installer.sh && ./config_symlink.sh
fi


# Run the package installer if selected
if [ "$execute_package_installer" -eq 1 ];
then
  if [[ -x ./package_installer.sh ]];
  then
    echo "Running package installer script..."
    ./package_installer.sh
  else
    echo "package_installer.sh not found or not executable"
    exit 1
  fi
fi


# Run the symlink creation script if selected
if [ "$execute_symlink" -eq 1 ];
then
  if [[ -x ./config_symlink.sh ]];
  then
    echo "Running symlink creation script..."
    ./config_symlink.sh
  else
    echo "config_symlink.sh not found or not executable"
    exit 1
  fi
fi